

<script>

   


    var colorsx = ['#4886F5', '#BC5BCF', '#32D7ED', '#8FB9FF', '#9AFE2E', 'purple', '#0000FF', '#01A9DB', '#FA5858', '#F79F81', '#F7D358', '#9AFE2E', '#64FE2E', '#2E9AFE', '#848484', '#8A0829', '#0B6138', '#9AFE2E', '#B18904', '#7401DF', "#8258FA"];
    var blue = ['#4886F5', '#4886F5', '#4886F5', '#4886F5', '#4886F5', '#4886F5', '#4886F5', '#4886F5', '#4886F5'];
    let txtDateFrom = $('#txtDateFrom'), txtDateTo = $('#txtDateTo'), ddlClients = $('#ddlClients'),
        hTotal = $('#hTotal'), hTotalDraft = $('#hTotalDraft'), hTotalInProgress = $('#hTotalInProgress'), hTotalApproved = $('#hTotalApproved'), hTotalRejected = $('#hTotalRejected')
        , tbodyTopBranches = $('#tbodyTopBranches'), tbodyTopProducts = $('#tbodyTopProducts'), divBranchCharts = $('#divBranchCharts')

        , hNotStarted = $('#hNotStarted')
        , hTotalEnded = $('#hTotalEnded'),
        hTotalInRemaining = $("#hTotalInRemaining"),

        percentageRemaining = $("#percentageRemaining"),
        percentageEnded = $("#percentageEnded");







    $(document).ready(function () {

        LoadTotals();
        LoadCitiesSations();
        LoadDashboardCharts();

    });
    function LoadTotals(dateFrom = null, dateTo = null) {
        $.post('@Url.GetAction("LoadTotals")', { dateFrom, dateTo}, function (res) {
                hTotal.html(res.total);
                hNotStarted.html(res.notStarted);
                hTotalInProgress.html(res.inProgress);
                hTotalEnded.html(res.ended);
                hTotalInRemaining.html(res.notStarted + res.inProgress);
                percentageEnded.text(Math.round((res.ended / res.total) * 100) + "%");
            percentageRemaining.text(Math.round(((res.notStarted + res.inProgress) / res.total) * 100) + "%");
    });
    }


    function LoadCitiesSations(dateFrom = null, dateTo = null) {

        $.post('@Url.GetAction("LoadCitiesSations")', { dateFrom, dateTo }, function (res) {
            $('#divCities').html('');
            const dataSourcebranches = [];
            const dataSourcebranchesbar = [];
       
            $.each(res, function (k, value) {
                var divId = 'divBranchPie' + value.id;

                var div = `<div class="col-md-3 ">
                <div class="card">
                    <div class="card-header justify-content-center pr-0 px-0">
                        <h6 class="card-title font-size-14">${value.cityName} : ${value.total}</h6>
                    </div>
                    <div class="card-body pr-1 px-1  pt-2 pb-2">
                        <div class="dx-viewport demo-container">
                            <div id="${divId}" class="pie"></div>
                        </div>

                    </div>
                </div>
            </div>`;

                $('#divCities').append(div);
                const dataSourcepie1 = [
                    {
                        Key: 'لم يتم تقييمها',
                        percent: CalculatePercentage(value.total, value.notStarted) ,
                        Number: value.notStarted,
                    },
                    {
                        Key: 'قيد التقييم',
                        percent: CalculatePercentage(value.total, value.inProgress) ,
                        Number: value.inProgress,
                    },
                    {
                        Key: 'تم تقييمها',
                        percent: CalculatePercentage(value.total, value.ended),
                        Number: value.ended,
                    }

                ];

                $('#' + divId).dxPieChart({
                    // palette: 'ocean',
                    dataSource: dataSourcepie1,
                    type: 'doughnut',
                    title: {
                        text: '',
                        subtitle: {
                            text: '',
                        },
                    },
                    innerRadius: 0.6,

                    legend: {
                        horizontalAlignment: 'center',
                        verticalAlignment: 'bottom',
                        margin: 0,

                    },
                    palette: ['#800100','rgb(229,107,40)', '#74ac53'],

                    tooltip: {
                        enabled: true,
                        format: 'fixedPoint',
                        customizeTooltip() {
                            return { text: `${this.argumentText}: ${this.point._dataItem.data.Number} (${this.valueText}%)` };
                        },
                    },

                    export: {
                        enabled: false,
                    },
                    series: [{
                        argumentField: 'Key',
                        valueField: 'percent',
                        valueMain: 'Number'

                    }],

                });

                dataSourcebranches.push({
                    Country: value.cityName,
                    NotStarted: value.notStarted,
                    InProgress: value.inProgress,
                    Rated: value.ended,

                });
                dataSourcebranchesbar.push({
                    Branch: value.cityName,
                    Percent: Math.round((100 * value.ended / value.total) * 100) / 100,
                })

            });



            $('#divBranches').html('').html(`<div class="card p-0">
            <div class="card-header justify-content-center">
                <h4 class="card-title">بيانات التقييم للفروع</h4>
            </div>
            <div class="card-body  pr-0 px-0 pt-1 pb-1">
                <div class="dx-viewport demo-container">
                    <div id="branchespie"></div>
                </div>
            </div>
        </div>`);
            $('#divBranchesbar').html('').html(`        <div class="card p-0">
            <div class="card-header justify-content-center">
                <h4 class="card-title">نتائج أعمال التقييم فى الفروع</h4>
            </div>
            <div class="card-body  pr-0 px-0 pt-1 pb-1">
                <div class="dx-viewport demo-container">
                    <div id="branchesbar"></div>
                </div>
            </div>
        </div>
`);

            $('#branchespie').dxPieChart({
                // palette: 'ocean',
                dataSource: dataSourcebranches,
                type: 'doughnut',
                title: {
                    text: '',
                    subtitle: {
                        text: '',
                    },
                },
                legend: {
                    visible: true,
                    verticalAlignment: 'bottom',
                    horizontalAlignment: 'center',
                    margin: 10,


                },
                innerRadius: 0.5,
                palette: ['#649ed0', '#74ac53', '#334960', '#0A6A39', 'rgba(245,198,82,1)', 'rgba(231,133,88,1)', '#f70013'],
                commonSeriesSettings: {
                    label: {
                        visible: false,
                    },
                },
                tooltip: {
                    enabled: true,
                    format: 'fixedPoint',
                    customizeTooltip() {
                        return { text: `${this.argumentText}<br>${this.seriesName}: ${this.valueText}` };
                    },
                },
                export: {
                    enabled: false,
                },
                series: [
                    {
                        name: 'لم يتم تقييمها',
                        argumentField: 'Country',
                        valueField: 'NotStarted',
                    },
                    {
                        name: 'قيد التقييم',
                        argumentField: 'Country',
                        valueField: 'InProgress',
                    },

                    {
                        name: 'تم تقييمها',
                        argumentField: 'Country',
                        valueField: 'Rated',
                    }],
            });
            $(() => {
                $('#branchesbar').dxChart({
                    rotated: true,
                    dataSource: dataSourcebranchesbar.sort((a, b) => parseFloat(a.Percent) - parseFloat(b.Percent)),
                    legend: {
                        visible: false,
                    },
                    size: {
                        width: "100%",
                        height:400
                    },
                    //series: {
                    //    type: 'bar',
                    //},
                    series: {
                        barPadding: 0.5,
                        label: {
                            visible: true,
                            backgroundColor: '#000',
                            customizeText() {
                                return `${this.valueText} %`;
        },

                        },
                        color: '#79cac4',
                        type: 'bar',
                        argumentField: 'Branch',
                        valueField: 'Percent',
                    },
                    argumentAxis: {
                        tickInterval: 10,
                        label: {
                            format: {
                                type: 'decimal',
                            },
                        },
                    },
                    title: '',
                });
            });


        });
    }
    function LoadDashboardCharts(dateFrom = null, dateTo = null) {






        $.post('@Url.GetAction("GetDashboardCharts")', { dateFrom, dateTo }, function (res) {
            $('#divDashboardCharts').html('');
           

            $.each(res, function (k, value) {
                var divId = 'divDashboardChart' + value.id;

                var div = `<div class="col-md-2">
                <div class="card">
                    <div class="card-header justify-content-center pr-0 px-0" style="max-height: 80px;height: 80px;">
                        <h6 class="card-title font-size-14 text-center">${value.title}</h6>
                    </div>
                    <div class="card-body pr-1 px-1  pt-2 pb-2">
                        <div class="dx-viewport demo-container">
                            <div id='${divId}' class="pie"></div>
                        </div>

                    </div>
                </div>
            </div>`;
                $('#divDashboardCharts').append(div);
              

                const dataSourcepie = [


                    {
                        Key: 'غير محقق',
                        percent: CalculatePercentage(value.total, value.unrealized),
                        Number: value.unrealized,
                    },
                    {
                        Key: 'محقق',
                        percent: CalculatePercentage(value.total, value.realized),
                        Number: value.realized,
                    }

                ];

                $('#' + divId).dxPieChart({
                    // palette: 'ocean',
                    dataSource: dataSourcepie,
                    type: 'doughnut',
                    title: {
                        text: '',
                        subtitle: {
                            text: '',
                        },
                    },
                    innerRadius: 0.6,

                    legend: {
                        horizontalAlignment: 'center',
                        verticalAlignment: 'bottom',
                        margin: 0,

                    },
                    palette: [ '#649ed0', '#74ac53'],

                    tooltip: {
                        enabled: true,
                        format: 'fixedPoint',
                        customizeTooltip() {
                            return { text: `${this.argumentText}: ${this.point._dataItem.data.Number} (${this.valueText}%)` };
                        },
                    },

                    export: {
                        enabled: false,
                    },
                    series: [{
                        argumentField: 'Key',
                        valueField: 'percent',
                        valueMain: 'Number'

                    }],

                });

        //        var div = `<div class="col-lg-3 col-md-6">
        //    <div class="card card-h-100">
        //        <div class="card-body">
        //            <div class="d-flex flex-wrap align-items-center mb-4">
        //                <h3 class="card-title me-2">${value.title} : ${value.total}</h3>
        //                <hr />

        //            </div>

        //            <div class="row align-items-center">
        //                <div class="col-sm">
        //                    <div id="${divId}" data-colors='["#777aca", "#5156be", "#a8aada"]' class="apex-charts"></div>
        //                </div>

        //            </div>
        //        </div>
        //    </div>
        //</div>`;

                        //am4core.ready(function () {
                //var options = {
                //    series: [value.realized,value.unrealized],
                //    chart: {
                //        width: '100%',
                //        type: 'pie',
                //    },
                //    labels: ["محقق", "غير محقق"],
                //    theme: {
                //        monochrome: {
                //            enabled: true
                //        }
                //    },

                //    plotOptions: {
                //        pie: {
                //            dataLabels: {
                //                offset: -5,
                //            },
                //        }
                //    },


                //    title: {
                //        text: ""
                //    },
                //    dataLabels: {
                //        formatter(val, opts) {
                //            const name = opts.w.globals.labels[opts.seriesIndex]
                //            return [val.toFixed(1)]
                //        }
                //    },
                //    legend: {
                //        show: false
                //    },
                //    stroke: {
                //        show: false,

                //    },
                //    fill: {
                //        colors: ['#0A6A3A', '#4886F5']
                //    }
                //};

                //var chart = new ApexCharts(document.querySelector("#"+divId), options);
                //chart.render();


            });


  

        });
    }

    function CalculatePercentage(total, value) {
        return Math.round((((value / total) * 100) + Number.EPSILON) * 100) / 100

    }

    function ViewReports() {

        LoadCitiesSations(txtDateFrom.val(), txtDateTo.val());
        LoadTotals(txtDateFrom.val(), txtDateTo.val());
        LoadDashboardCharts(txtDateFrom.val(), txtDateTo.val());

        
    }

</script>